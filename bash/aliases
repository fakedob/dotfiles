#!/bin/bash

is_linux=$(uname -an|grep 'Linux')
is_macbook_pro=$(uname -an|grep 'Pro')
is_ppc=$(uname -an|grep 'PPC')

if [ -f ~/.bash/private_aliases ]; then
    source ~/.bash/private_aliases
fi

if [ -f ~/.bash/djm/djm.sh ]; then
    source ~/.bash/djm/djm.sh
fi

alias reload_aliases="source ~/.bash/aliases"
alias reload_bash="source ~/.bash/config"

if [ -n "$is_linux" ];
then
    #is_linux = True
    alias ls="ls --classify --color=auto"
else
    #is_linux = False 
    #Mac maybe :)
    if [ ! -n "$is_ppc" ]; then
        alias vim=/Applications/MacPorts/MacVim.app/Contents/MacOS/Vim
    fi
    alias ls="ls -G"
    alias updatedb="sudo /usr/libexec/locate.updatedb"
fi

alias wgets="wget --no-check-certificate"
alias pyg="pygrep"
alias tmx="tmuxer"
alias hard="pyhard"

alias ..="cd .."
alias ...="cd ../.."
alias cdd='cd -'  # back to last directory
alias o="open ."  # OS X, open in Finder

###
# Functions
###

dws () { cd ~/Downloads/"$1"; }
docs () { cd ~/Documents/"$1"; }
wk () { cd ~/Documents/work/"$1"; }

if [ -n "$is_macbook_pro" ];
then
    htdocs () { cd /Applications/MAMP/htdocs/"$1"; }
    alias mysql="/Applications/MAMP/Library/bin/mysql"
else
    htdocs () { cd /Applications/XAMPP/htdocs/"$1"; }
fi

# Clone github repo
ghcl () { test -z "$1" && echo "Usage: ghcl username/repo"\n || git clone "http://github.com/$1"; }

function dumptcp
{
    NOW=$(date +%Y_%d_%m_%H_%M)
    LOGFILE=tcpdump-$NOW.log

    if [ -z "$1" ];
    then
        if [ -n "$is_macbook_pro" ];
        then
            ETHIFACE="en0"
        else
            ETHIFACE="eth0"
        fi

    else
        ETHIFACE=$1
    fi

    COMMAND="tcpdump -i $ETHIFACE -s0 -w $LOGFILE"

    if [ -n "$is_macbook_pro" ];
    then
        sudo $COMMAND
    else
        $COMMAND
    fi
}

######################
# Print working file.
function pwf {
  echo "$PWD/$1"
}

# Create directory and cd to it.
function mkcd {
  mkdir -p "$1" && cd "$1"
}

# SSH to the given machine and add your id_rsa.pub or id_dsa.pub to authorized_keys.
#
# ~$ sshkey server
# Password:
# sshkey done.

function sshkey {
  ssh $1 "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys" < ~/.ssh/id_?sa.pub
    echo "sshkey done."
}
######################
# These last 3 functuions are from http://github.com/henrik/dotfiles/raw/master/bash/functions.sh
######################

parse_git_branch() {
  git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1)/'
}
